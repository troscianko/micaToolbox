// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//X 0.9906499167448451
//Y 0.9938296250893734
//Z 0.9966973953738549


// Generated: 2019/0/21   9:36:1


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Wileyfox_SparkX_CIE_1931_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] X = new float[dimension];
float[] Y = new float[dimension];
float[] Z = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
X[i] = (float) (-0.0023954756899483075 +(visibleR[i]*0.005255576759797079)+(visibleG[i]*0.002955587778125343)+(visibleB[i]*0.0015450433979124162)+(visibleR[i]*visibleG[i]*4.4221491581940677E-5)+(visibleR[i]*visibleB[i]*-2.8095916678760356E-5)+(visibleG[i]*visibleB[i]*-1.2359869751287398E-5));
Y[i] = (float) (-0.004054525177127373 +(visibleR[i]*0.0020687537137820816)+(visibleG[i]*0.008722807014213789)+(visibleB[i]*-8.81818268671604E-4)+(visibleR[i]*visibleG[i]*1.7636826945301652E-5)+(visibleR[i]*visibleB[i]*-7.581361425318541E-6)+(visibleG[i]*visibleB[i]*-7.3994772270508446E-6));
Z[i] = (float) (0.00837197529356789 +(visibleR[i]*-2.0092502205280348E-4)+(visibleG[i]*9.395193493806601E-4)+(visibleB[i]*0.008917073054544818)+(visibleR[i]*visibleG[i]*1.0376626398241665E-5)+(visibleR[i]*visibleB[i]*-3.475339703316495E-5)+(visibleG[i]*visibleB[i]*2.4827439778520368E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("X", X);
outStack.addSlice("Y", Y);
outStack.addSlice("Z", Z);
new ImagePlus("Output", outStack).show();

}
}
