// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9994850041877303
//mw 0.9998944861075962
//sw 0.9970888829648858


// Generated: 2019/2/15   5:2:24


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Samsung_NX1000_Nikkor_EL_80mm_D65_to_Human_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (1.5918887444433727E-4 +(vR[i]*0.001756222417356307)+(vG[i]*0.010405807845466379)+(vB[i]*-0.0023459996112842104)+(vR[i]*vG[i]*-5.6559479019616555E-6)+(vR[i]*vB[i]*5.300680009917122E-6)+(vG[i]*vB[i]*1.9728230015943244E-6));
mw[i] = (float) (0.001003927182961521 +(vR[i]*-7.790976930149736E-4)+(vG[i]*0.011606271171358014)+(vB[i]*-9.156807017302618E-4)+(vR[i]*vG[i]*-9.972755853972223E-7)+(vR[i]*vB[i]*1.5270678243201009E-6)+(vG[i]*vB[i]*-1.327020585864236E-8));
sw[i] = (float) (0.006445391468943928 +(vR[i]*8.037960415290275E-5)+(vG[i]*-0.004242500358712567)+(vB[i]*0.013492470896380638)+(vR[i]*vG[i]*-8.190456327410252E-7)+(vR[i]*vB[i]*5.633262159401246E-6)+(vG[i]*vB[i]*-2.584262375799048E-7));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
