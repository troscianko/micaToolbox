// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9953498955418706
//mw 0.9970316234098724
//sw 0.9902718314766478


// Generated: 2019/2/27   9:54:49


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class eIm_52mm_Human_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-0.006288601118287915 +(visibleR[i]*0.0022271474248423146)+(visibleG[i]*0.009087070628211336)+(visibleB[i]*-0.0010568250688398827)+(visibleR[i]*visibleG[i]*3.4038564598433756E-5)+(visibleR[i]*visibleB[i]*2.586627154077307E-6)+(visibleG[i]*visibleB[i]*-1.9250694726742307E-5));
mw[i] = (float) (-0.008719335428087623 +(visibleR[i]*-3.2569676963440893E-4)+(visibleG[i]*0.011806715571002359)+(visibleB[i]*-5.627082649116139E-4)+(visibleR[i]*visibleG[i]*3.9158980687969016E-6)+(visibleR[i]*visibleB[i]*1.08192744678359E-5)+(visibleG[i]*visibleB[i]*-1.6439269827530727E-5));
sw[i] = (float) (0.006716585510301799 +(visibleR[i]*-3.6859487323637896E-4)+(visibleG[i]*-0.003226071261361552)+(visibleB[i]*0.013280194774842359)+(visibleR[i]*visibleG[i]*1.1345805290628396E-6)+(visibleR[i]*visibleB[i]*4.8131102927314956E-5)+(visibleG[i]*visibleB[i]*-3.079075863970972E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
