// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9932941301368013
//mw 0.9946663010665379
//sw 0.9954045932733788


// Generated: 2019/2/11   16:24:49


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Wileyfox_Spark_X_Human_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visR;
float[] visG;
float[] visB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];

visR = (float[]) stack.getPixels(1);
visG = (float[]) stack.getPixels(2);
visB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-0.01117925233492185 +(visR[i]*0.002861070863500964)+(visG[i]*0.007511892314255449)+(visB[i]*-5.846545185184168E-4)+(visR[i]*visG[i]*2.369044515377072E-5)+(visR[i]*visB[i]*-1.1763488503771132E-5)+(visG[i]*visB[i]*-8.109355925044352E-6));
mw[i] = (float) (-0.012247832635672152 +(visR[i]*5.049229746246656E-4)+(visG[i]*0.009910322928464806)+(visB[i]*-5.762492071679406E-4)+(visR[i]*visG[i]*5.71185847512874E-6)+(visR[i]*visB[i]*-3.4260301138778876E-6)+(visG[i]*visB[i]*9.305464191289387E-7));
sw[i] = (float) (-0.0012070432202984957 +(visR[i]*-2.474637692993385E-4)+(visG[i]*5.888756189300408E-4)+(visB[i]*0.009133159557968019)+(visR[i]*visG[i]*1.397966418345017E-5)+(visR[i]*visB[i]*-2.673232729636916E-5)+(visG[i]*visB[i]*1.4438487211874668E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
