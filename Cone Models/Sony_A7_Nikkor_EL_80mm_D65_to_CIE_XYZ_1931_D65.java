// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//X 0.9983483559700062
//Y 0.9997336471730045
//Z 0.997749921918097


// Generated: 2019/2/28   10:5:25


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Sony_A7_Nikkor_EL_80mm_D65_to_CIE_XYZ_1931_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] X = new float[dimension];
float[] Y = new float[dimension];
float[] Z = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
X[i] = (float) (7.669054028580066E-5 +(vR[i]*0.005109209957929169)+(vG[i]*0.005318995866954893)+(vB[i]*-7.44864095967184E-4)+(vR[i]*vG[i]*-7.991788476541176E-6)+(vR[i]*vB[i]*3.095060302957274E-6)+(vG[i]*vB[i]*7.899936180945225E-6));
Y[i] = (float) (-1.4336785250542694E-4 +(vR[i]*0.0011071725928482321)+(vG[i]*0.011693357588683766)+(vB[i]*-0.002914400400615471)+(vR[i]*vG[i]*-3.563032248887183E-6)+(vR[i]*vB[i]*1.2443458259087982E-6)+(vG[i]*vB[i]*3.460447492039824E-6));
Z[i] = (float) (0.006277497071173277 +(vR[i]*5.935431249210096E-4)+(vG[i]*-0.003712649948820032)+(vB[i]*0.012621292955143883)+(vR[i]*vG[i]*3.8062095891746227E-6)+(vR[i]*vB[i]*-5.388467168646423E-6)+(vG[i]*vB[i]*4.645274767251868E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("X", X);
outStack.addSlice("Y", Y);
outStack.addSlice("Z", Z);
new ImagePlus("Output", outStack).show();

}
}
